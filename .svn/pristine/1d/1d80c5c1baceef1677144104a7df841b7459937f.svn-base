package com.youzidata.weather.controller;

import com.youzidata.weather.service.SearchSplitDataService;
import com.youzidata.weather.util.CheckParamUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;
import java.util.Map;

/**
 * @Author: YingBoWei
 * @Date: 2019-04-17 10:28
 * @Description:
 */
@RestController
@CrossOrigin
public class SearchSplitDataController {

    @Autowired
    SearchSplitDataService searchSplitDataService;

    /**
     * 测试由201809290350.nc文件切分导入的查询
     * @param startLat
     * @param endLat
     * @param startLon
     * @param endLon
     * @return
     */
    @GetMapping("/searchSplitData")
    public Object searchSplitData(@RequestParam(required = false) Integer gid_level,
                                  @RequestParam(required = true) Double startLat, @RequestParam(required = true) Double endLat,
                                  @RequestParam(required = true) Double startLon, @RequestParam(required = true) Double endLon) {
        if(startLat > 90 || endLat < -90 || startLon < 60 || startLon > 240 || startLat > endLat || startLon > endLon) {
            CheckParamUtil.getErrorMap("1001");
        }
//        Map<String, Object> resultMap = searchSplitDataService.statisticalQuery(gid_level, startLat, endLat, startLon, endLon);
        Map<String, Object> resultMap = searchSplitDataService.statisticalQueryTest(gid_level, startLat, endLat, startLon, endLon);
        return resultMap;
    }

    /**
     * 测试由201809290350.nc文件切分导入的查询，先将目标矩阵块查出来进行抽希，然后按条件进行截取
     * @param startLat
     * @param endLat
     * @param startLon
     * @param endLon
     * @return
     */
    @GetMapping("/searchSplitData1")
    public Object searchSplitData1(@RequestParam(required = false) Integer gid_level,
                                  @RequestParam(required = true) Double startLat, @RequestParam(required = true) Double endLat,
                                  @RequestParam(required = true) Double startLon, @RequestParam(required = true) Double endLon) {
        if(startLat > 90 || endLat < -90 || startLon < 60 || startLon > 240 || startLat > endLat || startLon > endLon) {
            CheckParamUtil.getErrorMap("1001");
        }
        Map<String, Object> resultMap = searchSplitDataService.statisticalQueryTest1(gid_level, startLat, endLat, startLon, endLon);
        return resultMap;
    }

}
